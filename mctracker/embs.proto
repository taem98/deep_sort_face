syntax = "proto2";

package EmbExchange;

service EmbServer {
    rpc sendPayload(payloads) returns (respond) {}
    rpc sendCommand(command) returns (respond) {}
//    rpc getPayload(request) returns (payloads) {}
}

message respond {
    required uint32 respondid = 1;
}

message request {
    required uint32 requestid = 1;
}

message ImageShape {
    required uint32 height = 1;
    required uint32 width = 2;
    optional uint32 channel = 3;
}

message command {
    enum Command {
        PAUSE = 0;
        CONTINUE = 1;
        START = 2;
        TRACKLET_SEND = 3;
        STOPPED = 4;
    }
    required Command cmd = 1;
    repeated string master_address = 2;
}

message bbox {
    required int32 top = 1;
    required int32 left = 2;
    required uint32 width = 3;
    required uint32 height = 4;
}

message embeddings {
    required uint32 id = 1;
    repeated double weight = 2 [packed=true];
    required double confidence = 3;
    required uint32 labelid = 4;
    required uint64 frame_time = 5; // frame time
    required bbox det_bbox = 6;
}

message payloads {
    required uint32 carid = 1;
    repeated embeddings embs = 2;
    required uint32 embs_num = 3;
    required uint32 time = 4;
    required ImageShape imgshape = 5;
}